State 1 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 89 conflicts: 12 shift/reduce
State 109 conflicts: 13 shift/reduce
State 110 conflicts: 12 shift/reduce
State 137 conflicts: 12 shift/reduce
State 138 conflicts: 12 shift/reduce
State 154 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: dec decs
    3     | dec

    4 dec: typeDec
    5    | varDec
    6    | funcDec

    7 typeDec: typedecs

    8 typedecs: typedec typedecs
    9         | typedec

   10 typedec: TYPE ID EQ ty

   11 ty: nameTy
   12   | recordTy
   13   | arrayTy

   14 nameTy: ID

   15 arrayTy: ARRAY OF ID

   16 recordTy: LBRACE fields RBRACE

   17 field: ID COLON ID

   18 fields: field COMMA fields
   19       | field
   20       | %empty

   21 funcDec: funcdecs

   22 funcdecs: funcdec funcdecs
   23         | funcdec

   24 funcdec: FUNCTION ID LPAREN fields RPAREN EQ exp
   25        | FUNCTION ID LPAREN fields RPAREN COLON ID EQ exp

   26 varDec: VAR ID ASSIGN exp
   27       | VAR ID COLON ID ASSIGN exp

   28 varExp: var

   29 var: ID
   30    | ID LBRACK exp RBRACK
   31    | var DOT ID
   32    | var LBRACK exp RBRACK

   33 exp: varExp
   34    | nilExp
   35    | intExp
   36    | stringExp
   37    | callExp
   38    | opExp
   39    | andExp
   40    | orExp
   41    | recordExp
   42    | seqExp
   43    | assignExp
   44    | ifExp
   45    | whileExp
   46    | forExp
   47    | breakExp
   48    | arrayExp
   49    | letExp

   50 nilExp: NIL

   51 intExp: INT

   52 stringExp: STRING

   53 callExp: ID LPAREN exps1 RPAREN

   54 opExp: exp EQ exp
   55      | exp NEQ exp
   56      | exp LT exp
   57      | exp LE exp
   58      | exp GT exp
   59      | exp GE exp
   60      | exp PLUS exp
   61      | exp MINUS exp
   62      | exp TIMES exp
   63      | exp DIVIDE exp
   64      | MINUS exp

   65 andExp: exp AND exp

   66 orExp: exp OR exp

   67 recordExp: ID LBRACE efields RBRACE

   68 efield: ID EQ exp

   69 efields: efield COMMA efields
   70        | efield
   71        | %empty

   72 seqExp: LPAREN exps2 RPAREN

   73 assignExp: var ASSIGN exp

   74 exps1: exp COMMA exps1
   75      | exp
   76      | %empty

   77 exps2: exp SEMICOLON exps2
   78      | exp
   79      | %empty

   80 ifExp: IF exp THEN exp ELSE exp
   81      | IF exp THEN exp

   82 whileExp: WHILE exp DO exp

   83 forExp: FOR ID ASSIGN exp TO exp DO exp

   84 breakExp: BREAK

   85 arrayExp: ID LBRACK exp RBRACK OF exp

   86 letExp: LET decs IN exps2 END


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 10 14 15 17 24 25 26 27 29 30 31 53 67 68 83 85
STRING (259) 52
INT (260) 51
COMMA (261) 18 69 74
COLON (262) 17 25 27
SEMICOLON (263) 77
LPAREN (264) 24 25 53 72
RPAREN (265) 24 25 53 72
LBRACK (266) 30 32 85
RBRACK (267) 30 32 85
LBRACE (268) 16 67
RBRACE (269) 16 67
DOT (270) 31
PLUS (271) 60
MINUS (272) 61 64
TIMES (273) 62
DIVIDE (274) 63
EQ (275) 10 24 25 54 68
NEQ (276) 55
LT (277) 56
LE (278) 57
GT (279) 58
GE (280) 59
AND (281) 65
OR (282) 66
ASSIGN (283) 26 27 73 83
ARRAY (284) 15
IF (285) 80 81
THEN (286) 80 81
ELSE (287) 80
WHILE (288) 82
FOR (289) 83
TO (290) 83
DO (291) 82 83
LET (292) 86
IN (293) 86
END (294) 86
OF (295) 15 85
BREAK (296) 84
NIL (297) 50
FUNCTION (298) 24 25
VAR (299) 26 27
TYPE (300) 10
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
decs (49)
    on left: 2 3, on right: 2 86
dec (50)
    on left: 4 5 6, on right: 2 3
typeDec (51)
    on left: 7, on right: 4
typedecs (52)
    on left: 8 9, on right: 7 8
typedec (53)
    on left: 10, on right: 8 9
ty (54)
    on left: 11 12 13, on right: 10
nameTy (55)
    on left: 14, on right: 11
arrayTy (56)
    on left: 15, on right: 13
recordTy (57)
    on left: 16, on right: 12
field (58)
    on left: 17, on right: 18 19
fields (59)
    on left: 18 19 20, on right: 16 18 24 25
funcDec (60)
    on left: 21, on right: 6
funcdecs (61)
    on left: 22 23, on right: 21 22
funcdec (62)
    on left: 24 25, on right: 22 23
varDec (63)
    on left: 26 27, on right: 5
varExp (64)
    on left: 28, on right: 33
var (65)
    on left: 29 30 31 32, on right: 28 31 32 73
exp (66)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49, on right:
    1 24 25 26 27 30 32 54 55 56 57 58 59 60 61 62 63 64 65 66 68 73
    74 75 77 78 80 81 82 83 85
nilExp (67)
    on left: 50, on right: 34
intExp (68)
    on left: 51, on right: 35
stringExp (69)
    on left: 52, on right: 36
callExp (70)
    on left: 53, on right: 37
opExp (71)
    on left: 54 55 56 57 58 59 60 61 62 63 64, on right: 38
andExp (72)
    on left: 65, on right: 39
orExp (73)
    on left: 66, on right: 40
recordExp (74)
    on left: 67, on right: 41
efield (75)
    on left: 68, on right: 69 70
efields (76)
    on left: 69 70 71, on right: 67 69
seqExp (77)
    on left: 72, on right: 42
assignExp (78)
    on left: 73, on right: 43
exps1 (79)
    on left: 74 75 76, on right: 53 74
exps2 (80)
    on left: 77 78 79, on right: 72 77 86
ifExp (81)
    on left: 80 81, on right: 44
whileExp (82)
    on left: 82, on right: 45
forExp (83)
    on left: 83, on right: 46
breakExp (84)
    on left: 84, on right: 47
arrayExp (85)
    on left: 85, on right: 48
letExp (86)
    on left: 86, on right: 49


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    varExp     go to state 13
    var        go to state 14
    exp        go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 1

   29 var: ID .
   30    | ID . LBRACK exp RBRACK
   53 callExp: ID . LPAREN exps1 RPAREN
   67 recordExp: ID . LBRACE efields RBRACE
   85 arrayExp: ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 32
    LBRACK  shift, and go to state 33
    LBRACE  shift, and go to state 34

    LBRACK    [reduce using rule 29 (var)]
    $default  reduce using rule 29 (var)


State 2

   52 stringExp: STRING .

    $default  reduce using rule 52 (stringExp)


State 3

   51 intExp: INT .

    $default  reduce using rule 51 (intExp)


State 4

   72 seqExp: LPAREN . exps2 RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 79 (exps2)

    varExp     go to state 13
    var        go to state 14
    exp        go to state 35
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    exps2      go to state 36
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 5

   64 opExp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 37
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 6

   80 ifExp: IF . exp THEN exp ELSE exp
   81      | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 38
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 7

   82 whileExp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 39
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 8

   83 forExp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 40


State 9

   86 letExp: LET . decs IN exps2 END

    FUNCTION  shift, and go to state 41
    VAR       shift, and go to state 42
    TYPE      shift, and go to state 43

    decs      go to state 44
    dec       go to state 45
    typeDec   go to state 46
    typedecs  go to state 47
    typedec   go to state 48
    funcDec   go to state 49
    funcdecs  go to state 50
    funcdec   go to state 51
    varDec    go to state 52


State 10

   84 breakExp: BREAK .

    $default  reduce using rule 84 (breakExp)


State 11

   50 nilExp: NIL .

    $default  reduce using rule 50 (nilExp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 53


State 13

   33 exp: varExp .

    $default  reduce using rule 33 (exp)


State 14

   28 varExp: var .
   31 var: var . DOT ID
   32    | var . LBRACK exp RBRACK
   73 assignExp: var . ASSIGN exp

    LBRACK  shift, and go to state 54
    DOT     shift, and go to state 55
    ASSIGN  shift, and go to state 56

    $default  reduce using rule 28 (varExp)


State 15

    1 program: exp .
   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    $default  reduce using rule 1 (program)


State 16

   34 exp: nilExp .

    $default  reduce using rule 34 (exp)


State 17

   35 exp: intExp .

    $default  reduce using rule 35 (exp)


State 18

   36 exp: stringExp .

    $default  reduce using rule 36 (exp)


State 19

   37 exp: callExp .

    $default  reduce using rule 37 (exp)


State 20

   38 exp: opExp .

    $default  reduce using rule 38 (exp)


State 21

   39 exp: andExp .

    $default  reduce using rule 39 (exp)


State 22

   40 exp: orExp .

    $default  reduce using rule 40 (exp)


State 23

   41 exp: recordExp .

    $default  reduce using rule 41 (exp)


State 24

   42 exp: seqExp .

    $default  reduce using rule 42 (exp)


State 25

   43 exp: assignExp .

    $default  reduce using rule 43 (exp)


State 26

   44 exp: ifExp .

    $default  reduce using rule 44 (exp)


State 27

   45 exp: whileExp .

    $default  reduce using rule 45 (exp)


State 28

   46 exp: forExp .

    $default  reduce using rule 46 (exp)


State 29

   47 exp: breakExp .

    $default  reduce using rule 47 (exp)


State 30

   48 exp: arrayExp .

    $default  reduce using rule 48 (exp)


State 31

   49 exp: letExp .

    $default  reduce using rule 49 (exp)


State 32

   53 callExp: ID LPAREN . exps1 RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 76 (exps1)

    varExp     go to state 13
    var        go to state 14
    exp        go to state 69
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    exps1      go to state 70
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 33

   30 var: ID LBRACK . exp RBRACK
   85 arrayExp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 71
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 34

   67 recordExp: ID LBRACE . efields RBRACE

    ID  shift, and go to state 72

    $default  reduce using rule 71 (efields)

    efield   go to state 73
    efields  go to state 74


State 35

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   77 exps2: exp . SEMICOLON exps2
   78      | exp .

    SEMICOLON  shift, and go to state 75
    PLUS       shift, and go to state 57
    MINUS      shift, and go to state 58
    TIMES      shift, and go to state 59
    DIVIDE     shift, and go to state 60
    EQ         shift, and go to state 61
    NEQ        shift, and go to state 62
    LT         shift, and go to state 63
    LE         shift, and go to state 64
    GT         shift, and go to state 65
    GE         shift, and go to state 66
    AND        shift, and go to state 67
    OR         shift, and go to state 68

    $default  reduce using rule 78 (exps2)


State 36

   72 seqExp: LPAREN exps2 . RPAREN

    RPAREN  shift, and go to state 76


State 37

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   64      | MINUS exp .
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    $default  reduce using rule 64 (opExp)


State 38

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   80 ifExp: IF exp . THEN exp ELSE exp
   81      | IF exp . THEN exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68
    THEN    shift, and go to state 77


State 39

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   82 whileExp: WHILE exp . DO exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68
    DO      shift, and go to state 78


State 40

   83 forExp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 79


State 41

   24 funcdec: FUNCTION . ID LPAREN fields RPAREN EQ exp
   25        | FUNCTION . ID LPAREN fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 80


State 42

   26 varDec: VAR . ID ASSIGN exp
   27       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 81


State 43

   10 typedec: TYPE . ID EQ ty

    ID  shift, and go to state 82


State 44

   86 letExp: LET decs . IN exps2 END

    IN  shift, and go to state 83


State 45

    2 decs: dec . decs
    3     | dec .

    FUNCTION  shift, and go to state 41
    VAR       shift, and go to state 42
    TYPE      shift, and go to state 43

    $default  reduce using rule 3 (decs)

    decs      go to state 84
    dec       go to state 45
    typeDec   go to state 46
    typedecs  go to state 47
    typedec   go to state 48
    funcDec   go to state 49
    funcdecs  go to state 50
    funcdec   go to state 51
    varDec    go to state 52


State 46

    4 dec: typeDec .

    $default  reduce using rule 4 (dec)


State 47

    7 typeDec: typedecs .

    $default  reduce using rule 7 (typeDec)


State 48

    8 typedecs: typedec . typedecs
    9         | typedec .

    TYPE  shift, and go to state 43

    TYPE      [reduce using rule 9 (typedecs)]
    $default  reduce using rule 9 (typedecs)

    typedecs  go to state 85
    typedec   go to state 48


State 49

    6 dec: funcDec .

    $default  reduce using rule 6 (dec)


State 50

   21 funcDec: funcdecs .

    $default  reduce using rule 21 (funcDec)


State 51

   22 funcdecs: funcdec . funcdecs
   23         | funcdec .

    FUNCTION  shift, and go to state 41

    FUNCTION  [reduce using rule 23 (funcdecs)]
    $default  reduce using rule 23 (funcdecs)

    funcdecs  go to state 86
    funcdec   go to state 51


State 52

    5 dec: varDec .

    $default  reduce using rule 5 (dec)


State 53

    0 $accept: program $end .

    $default  accept


State 54

   32 var: var LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 87
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 55

   31 var: var DOT . ID

    ID  shift, and go to state 88


State 56

   73 assignExp: var ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 89
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 57

   60 opExp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 90
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 58

   61 opExp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 91
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 59

   62 opExp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 92
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 60

   63 opExp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 93
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 61

   54 opExp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 94
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 62

   55 opExp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 95
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 63

   56 opExp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 96
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 64

   57 opExp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 97
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 65

   58 opExp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 98
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 66

   59 opExp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 99
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 67

   65 andExp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 100
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 68

   66 orExp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 101
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 69

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   74 exps1: exp . COMMA exps1
   75      | exp .

    COMMA   shift, and go to state 102
    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    $default  reduce using rule 75 (exps1)


State 70

   53 callExp: ID LPAREN exps1 . RPAREN

    RPAREN  shift, and go to state 103


State 71

   30 var: ID LBRACK exp . RBRACK
   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   85 arrayExp: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 104
    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68


State 72

   68 efield: ID . EQ exp

    EQ  shift, and go to state 105


State 73

   69 efields: efield . COMMA efields
   70        | efield .

    COMMA  shift, and go to state 106

    $default  reduce using rule 70 (efields)


State 74

   67 recordExp: ID LBRACE efields . RBRACE

    RBRACE  shift, and go to state 107


State 75

   77 exps2: exp SEMICOLON . exps2

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 79 (exps2)

    varExp     go to state 13
    var        go to state 14
    exp        go to state 35
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    exps2      go to state 108
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 76

   72 seqExp: LPAREN exps2 RPAREN .

    $default  reduce using rule 72 (seqExp)


State 77

   80 ifExp: IF exp THEN . exp ELSE exp
   81      | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 109
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 78

   82 whileExp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 110
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 79

   83 forExp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 111
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 80

   24 funcdec: FUNCTION ID . LPAREN fields RPAREN EQ exp
   25        | FUNCTION ID . LPAREN fields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 112


State 81

   26 varDec: VAR ID . ASSIGN exp
   27       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 113
    ASSIGN  shift, and go to state 114


State 82

   10 typedec: TYPE ID . EQ ty

    EQ  shift, and go to state 115


State 83

   86 letExp: LET decs IN . exps2 END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 79 (exps2)

    varExp     go to state 13
    var        go to state 14
    exp        go to state 35
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    exps2      go to state 116
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 84

    2 decs: dec decs .

    $default  reduce using rule 2 (decs)


State 85

    8 typedecs: typedec typedecs .

    $default  reduce using rule 8 (typedecs)


State 86

   22 funcdecs: funcdec funcdecs .

    $default  reduce using rule 22 (funcdecs)


State 87

   32 var: var LBRACK exp . RBRACK
   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    RBRACK  shift, and go to state 117
    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68


State 88

   31 var: var DOT ID .

    $default  reduce using rule 31 (var)


State 89

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   73 assignExp: var ASSIGN exp .

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    PLUS      [reduce using rule 73 (assignExp)]
    MINUS     [reduce using rule 73 (assignExp)]
    TIMES     [reduce using rule 73 (assignExp)]
    DIVIDE    [reduce using rule 73 (assignExp)]
    EQ        [reduce using rule 73 (assignExp)]
    NEQ       [reduce using rule 73 (assignExp)]
    LT        [reduce using rule 73 (assignExp)]
    LE        [reduce using rule 73 (assignExp)]
    GT        [reduce using rule 73 (assignExp)]
    GE        [reduce using rule 73 (assignExp)]
    AND       [reduce using rule 73 (assignExp)]
    OR        [reduce using rule 73 (assignExp)]
    $default  reduce using rule 73 (assignExp)


State 90

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   60      | exp PLUS exp .
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 60 (opExp)


State 91

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   61      | exp MINUS exp .
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 61 (opExp)


State 92

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   62      | exp TIMES exp .
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    $default  reduce using rule 62 (opExp)


State 93

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   63      | exp DIVIDE exp .
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    $default  reduce using rule 63 (opExp)


State 94

   54 opExp: exp . EQ exp
   54      | exp EQ exp .
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 54 (opExp)


State 95

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   55      | exp NEQ exp .
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 55 (opExp)


State 96

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   56      | exp LT exp .
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 56 (opExp)


State 97

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   57      | exp LE exp .
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 57 (opExp)


State 98

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   58      | exp GT exp .
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 58 (opExp)


State 99

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   59      | exp GE exp .
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60

    $default  reduce using rule 59 (opExp)


State 100

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   65       | exp AND exp .
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66

    $default  reduce using rule 65 (andExp)


State 101

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   66      | exp OR exp .

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66

    $default  reduce using rule 66 (orExp)


State 102

   74 exps1: exp COMMA . exps1

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 76 (exps1)

    varExp     go to state 13
    var        go to state 14
    exp        go to state 69
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    exps1      go to state 118
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 103

   53 callExp: ID LPAREN exps1 RPAREN .

    $default  reduce using rule 53 (callExp)


State 104

   30 var: ID LBRACK exp RBRACK .
   85 arrayExp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 119

    $default  reduce using rule 30 (var)


State 105

   68 efield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 120
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 106

   69 efields: efield COMMA . efields

    ID  shift, and go to state 72

    $default  reduce using rule 71 (efields)

    efield   go to state 73
    efields  go to state 121


State 107

   67 recordExp: ID LBRACE efields RBRACE .

    $default  reduce using rule 67 (recordExp)


State 108

   77 exps2: exp SEMICOLON exps2 .

    $default  reduce using rule 77 (exps2)


State 109

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   80 ifExp: IF exp THEN exp . ELSE exp
   81      | IF exp THEN exp .

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68
    ELSE    shift, and go to state 122

    PLUS      [reduce using rule 81 (ifExp)]
    MINUS     [reduce using rule 81 (ifExp)]
    TIMES     [reduce using rule 81 (ifExp)]
    DIVIDE    [reduce using rule 81 (ifExp)]
    EQ        [reduce using rule 81 (ifExp)]
    NEQ       [reduce using rule 81 (ifExp)]
    LT        [reduce using rule 81 (ifExp)]
    LE        [reduce using rule 81 (ifExp)]
    GT        [reduce using rule 81 (ifExp)]
    GE        [reduce using rule 81 (ifExp)]
    AND       [reduce using rule 81 (ifExp)]
    OR        [reduce using rule 81 (ifExp)]
    ELSE      [reduce using rule 81 (ifExp)]
    $default  reduce using rule 81 (ifExp)


State 110

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   82 whileExp: WHILE exp DO exp .

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    PLUS      [reduce using rule 82 (whileExp)]
    MINUS     [reduce using rule 82 (whileExp)]
    TIMES     [reduce using rule 82 (whileExp)]
    DIVIDE    [reduce using rule 82 (whileExp)]
    EQ        [reduce using rule 82 (whileExp)]
    NEQ       [reduce using rule 82 (whileExp)]
    LT        [reduce using rule 82 (whileExp)]
    LE        [reduce using rule 82 (whileExp)]
    GT        [reduce using rule 82 (whileExp)]
    GE        [reduce using rule 82 (whileExp)]
    AND       [reduce using rule 82 (whileExp)]
    OR        [reduce using rule 82 (whileExp)]
    $default  reduce using rule 82 (whileExp)


State 111

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   83 forExp: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68
    TO      shift, and go to state 123


State 112

   24 funcdec: FUNCTION ID LPAREN . fields RPAREN EQ exp
   25        | FUNCTION ID LPAREN . fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 124

    $default  reduce using rule 20 (fields)

    field   go to state 125
    fields  go to state 126


State 113

   27 varDec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 127


State 114

   26 varDec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 128
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 115

   10 typedec: TYPE ID EQ . ty

    ID      shift, and go to state 129
    LBRACE  shift, and go to state 130
    ARRAY   shift, and go to state 131

    ty        go to state 132
    nameTy    go to state 133
    arrayTy   go to state 134
    recordTy  go to state 135


State 116

   86 letExp: LET decs IN exps2 . END

    END  shift, and go to state 136


State 117

   32 var: var LBRACK exp RBRACK .

    $default  reduce using rule 32 (var)


State 118

   74 exps1: exp COMMA exps1 .

    $default  reduce using rule 74 (exps1)


State 119

   85 arrayExp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 137
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 120

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   68 efield: ID EQ exp .

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    $default  reduce using rule 68 (efield)


State 121

   69 efields: efield COMMA efields .

    $default  reduce using rule 69 (efields)


State 122

   80 ifExp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 138
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 123

   83 forExp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 139
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 124

   17 field: ID . COLON ID

    COLON  shift, and go to state 140


State 125

   18 fields: field . COMMA fields
   19       | field .

    COMMA  shift, and go to state 141

    $default  reduce using rule 19 (fields)


State 126

   24 funcdec: FUNCTION ID LPAREN fields . RPAREN EQ exp
   25        | FUNCTION ID LPAREN fields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 142


State 127

   27 varDec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 143


State 128

   26 varDec: VAR ID ASSIGN exp .
   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    $default  reduce using rule 26 (varDec)


State 129

   14 nameTy: ID .

    $default  reduce using rule 14 (nameTy)


State 130

   16 recordTy: LBRACE . fields RBRACE

    ID  shift, and go to state 124

    $default  reduce using rule 20 (fields)

    field   go to state 125
    fields  go to state 144


State 131

   15 arrayTy: ARRAY . OF ID

    OF  shift, and go to state 145


State 132

   10 typedec: TYPE ID EQ ty .

    $default  reduce using rule 10 (typedec)


State 133

   11 ty: nameTy .

    $default  reduce using rule 11 (ty)


State 134

   13 ty: arrayTy .

    $default  reduce using rule 13 (ty)


State 135

   12 ty: recordTy .

    $default  reduce using rule 12 (ty)


State 136

   86 letExp: LET decs IN exps2 END .

    $default  reduce using rule 86 (letExp)


State 137

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   85 arrayExp: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    PLUS      [reduce using rule 85 (arrayExp)]
    MINUS     [reduce using rule 85 (arrayExp)]
    TIMES     [reduce using rule 85 (arrayExp)]
    DIVIDE    [reduce using rule 85 (arrayExp)]
    EQ        [reduce using rule 85 (arrayExp)]
    NEQ       [reduce using rule 85 (arrayExp)]
    LT        [reduce using rule 85 (arrayExp)]
    LE        [reduce using rule 85 (arrayExp)]
    GT        [reduce using rule 85 (arrayExp)]
    GE        [reduce using rule 85 (arrayExp)]
    AND       [reduce using rule 85 (arrayExp)]
    OR        [reduce using rule 85 (arrayExp)]
    $default  reduce using rule 85 (arrayExp)


State 138

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   80 ifExp: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    PLUS      [reduce using rule 80 (ifExp)]
    MINUS     [reduce using rule 80 (ifExp)]
    TIMES     [reduce using rule 80 (ifExp)]
    DIVIDE    [reduce using rule 80 (ifExp)]
    EQ        [reduce using rule 80 (ifExp)]
    NEQ       [reduce using rule 80 (ifExp)]
    LT        [reduce using rule 80 (ifExp)]
    LE        [reduce using rule 80 (ifExp)]
    GT        [reduce using rule 80 (ifExp)]
    GE        [reduce using rule 80 (ifExp)]
    AND       [reduce using rule 80 (ifExp)]
    OR        [reduce using rule 80 (ifExp)]
    $default  reduce using rule 80 (ifExp)


State 139

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   83 forExp: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68
    DO      shift, and go to state 146


State 140

   17 field: ID COLON . ID

    ID  shift, and go to state 147


State 141

   18 fields: field COMMA . fields

    ID  shift, and go to state 124

    $default  reduce using rule 20 (fields)

    field   go to state 125
    fields  go to state 148


State 142

   24 funcdec: FUNCTION ID LPAREN fields RPAREN . EQ exp
   25        | FUNCTION ID LPAREN fields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 149
    EQ     shift, and go to state 150


State 143

   27 varDec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 151
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 144

   16 recordTy: LBRACE fields . RBRACE

    RBRACE  shift, and go to state 152


State 145

   15 arrayTy: ARRAY OF . ID

    ID  shift, and go to state 153


State 146

   83 forExp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 154
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 147

   17 field: ID COLON ID .

    $default  reduce using rule 17 (field)


State 148

   18 fields: field COMMA fields .

    $default  reduce using rule 18 (fields)


State 149

   25 funcdec: FUNCTION ID LPAREN fields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 155


State 150

   24 funcdec: FUNCTION ID LPAREN fields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 156
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 151

   27 varDec: VAR ID COLON ID ASSIGN exp .
   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    $default  reduce using rule 27 (varDec)


State 152

   16 recordTy: LBRACE fields RBRACE .

    $default  reduce using rule 16 (recordTy)


State 153

   15 arrayTy: ARRAY OF ID .

    $default  reduce using rule 15 (arrayTy)


State 154

   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp
   83 forExp: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    PLUS      [reduce using rule 83 (forExp)]
    MINUS     [reduce using rule 83 (forExp)]
    TIMES     [reduce using rule 83 (forExp)]
    DIVIDE    [reduce using rule 83 (forExp)]
    EQ        [reduce using rule 83 (forExp)]
    NEQ       [reduce using rule 83 (forExp)]
    LT        [reduce using rule 83 (forExp)]
    LE        [reduce using rule 83 (forExp)]
    GT        [reduce using rule 83 (forExp)]
    GE        [reduce using rule 83 (forExp)]
    AND       [reduce using rule 83 (forExp)]
    OR        [reduce using rule 83 (forExp)]
    $default  reduce using rule 83 (forExp)


State 155

   25 funcdec: FUNCTION ID LPAREN fields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 157


State 156

   24 funcdec: FUNCTION ID LPAREN fields RPAREN EQ exp .
   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    $default  reduce using rule 24 (funcdec)


State 157

   25 funcdec: FUNCTION ID LPAREN fields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    varExp     go to state 13
    var        go to state 14
    exp        go to state 158
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    andExp     go to state 21
    orExp      go to state 22
    recordExp  go to state 23
    seqExp     go to state 24
    assignExp  go to state 25
    ifExp      go to state 26
    whileExp   go to state 27
    forExp     go to state 28
    breakExp   go to state 29
    arrayExp   go to state 30
    letExp     go to state 31


State 158

   25 funcdec: FUNCTION ID LPAREN fields RPAREN COLON ID EQ exp .
   54 opExp: exp . EQ exp
   55      | exp . NEQ exp
   56      | exp . LT exp
   57      | exp . LE exp
   58      | exp . GT exp
   59      | exp . GE exp
   60      | exp . PLUS exp
   61      | exp . MINUS exp
   62      | exp . TIMES exp
   63      | exp . DIVIDE exp
   65 andExp: exp . AND exp
   66 orExp: exp . OR exp

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    TIMES   shift, and go to state 59
    DIVIDE  shift, and go to state 60
    EQ      shift, and go to state 61
    NEQ     shift, and go to state 62
    LT      shift, and go to state 63
    LE      shift, and go to state 64
    GT      shift, and go to state 65
    GE      shift, and go to state 66
    AND     shift, and go to state 67
    OR      shift, and go to state 68

    $default  reduce using rule 25 (funcdec)
